name: Terraform Security Scans
on:
  pull_request:
    branches: [ main ]
    paths:
      - 'terraform/**'
      - '**/*.tf'
      - '**/*.tfvars'
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'  # Daily scan

permissions:
  security-events: write
  contents: read

jobs:
  terraform-security-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: latest

      - name: Run tfsec (Terraform Security Scanner)
        uses: aquasecurity/tfsec-sarif-action@v0.1.4
        continue-on-error: true
        with:
          sarif_file: tfsec-results.sarif

      - name: Upload tfsec SARIF results
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: tfsec-results.sarif
          category: tfsec

      - name: Run Terrascan (Terraform Policy Scanner)
        uses: tenable/terrascan-action@main
        continue-on-error: true
        with:
          iac_type: 'terraform'
          iac_version: 'v14'
          policy_type: 'aws'
          verbose: false
          only_warn: true
          sarif_upload: true
          iac_dir: 'terraform'

      - name: Upload Terrascan SARIF results
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: terrascan.sarif
          category: terrascan

      - name: Run Checkov (Terraform Static Analysis)
        uses: bridgecrewio/checkov-action@master
        continue-on-error: true
        with:
          directory: terraform/
          framework: terraform
          output_format: sarif
          output_file_path: checkov-results.sarif
          quiet: true
          soft_fail: true

      - name: Upload Checkov SARIF results
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: checkov-results.sarif
          category: checkov